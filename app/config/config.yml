imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
            engines: ['twig', 'php']
    translator: { fallbacks: ["%locale%"] }

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
#        admin_skin: skin-red
    paths:
        '%kernel.root_dir%/../src/AppBundle/Resources/views': adminViews

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json:     Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataClassificationBundle: ~



# Swiftmailer Configuration
swiftmailer:
    transport: smtp
    host:      127.0.0.1
    username:
    password:
    port:      587


assetic:
    use_controller: false
    filters:
        uglifyjs2:
            # the path to the uglifyjs executable
            bin: C:\Users\HL\AppData\Roaming\npm\uglifyjs
        uglifycss:
            bin: / C:\Users\HL\AppData\Roaming\npm\uglifycss
    # java: '/usr/bin/java'
        yui_css:
            jar: '%kernel.project_dir%/app/Resources/java/yuicompressor.jar'
        yui_js:
            jar: '%kernel.project_dir%/app/Resources/java/yuicompressor.jar'

# app/config/config.yml
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

sonata_core:
    form:
        mapping:
            enabled: false
    form_type: horizontal

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:

# config/packages/sonata.yaml

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            download:
                strategy: sonata.media.security.public_strategy
                mode: http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                medium: { width: 500 , quality: 80}
                big:   { width: 950 , quality: 100}

    cdn:
        server:
            path: http://localhost/horarios/web/uploads/media # Esto debe cambiarse en produccion

    filesystem:
        local:
#            directory:  "%kernel.root_dir%/../public/uploads/media" #flex
            directory:  "%kernel.root_dir%/../web/uploads/media" #non-flex
            create:     false

    providers:
        file:
          allowed_extensions: ['mp4', 'flv']
          allowed_mime_types: ['video/mp4', 'video/x-flv']
        image:
          allowed_extensions: ['jpg', 'png', 'gif', 'jpeg']
          allowed_mime_types: ['image/pjpeg','image/jpeg','image/png','image/x-png', 'image/gif']
          resizer: sonata.media.resizer.square




    class:
        media: Application\Sonata\MediaBundle\Entity\Media
        gallery: Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    buzz:
        connector:  sonata.media.buzz.connector.curl

    #...






